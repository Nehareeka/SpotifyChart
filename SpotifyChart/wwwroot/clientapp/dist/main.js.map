{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/directives/filter.directive.ts","webpack:///./ClientApp/app/directives/sort.directive.ts","webpack:///./ClientApp/app/shared/add-header.interceptor.ts","webpack:///./ClientApp/app/shared/cache.interceptor.ts","webpack:///./ClientApp/app/shared/data.service.ts","webpack:///./ClientApp/app/shared/http-cache.service.ts","webpack:///./ClientApp/app/shared/pager.service.ts","webpack:///./ClientApp/app/song/song-detail.component.html","webpack:///./ClientApp/app/song/song-detail.component.ts","webpack:///./ClientApp/app/song/song-list.component.css","webpack:///./ClientApp/app/song/song-list.component.html","webpack:///./ClientApp/app/song/song-list.component.ts","webpack:///./ClientApp/app/song/song-list.resolver.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'spotify-chart',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { SongListComponent } from './song/song-list.component';\nimport { SongDetailComponent } from './song/song-detail.component';\n\nimport { SortDirective } from './directives/sort.directive';\nimport { FilterDirective } from './directives/filter.directive';\n\nimport { DataService } from './shared/data.service';\nimport { PagerService } from './shared/pager.service';\nimport { SongListResolver } from './song/song-list.resolver';\nimport { AddHeaderInterceptor } from './shared/add-header.interceptor';\nimport { CacheInterceptor } from './shared/cache.interceptor';\n\n\nlet route: Routes = [\n  { path: 'index', component: SongListComponent, resolve: { initData: SongListResolver } },\n  { path: 'detail/:name', component: SongDetailComponent },\n  { path: '', redirectTo: 'index', pathMatch: 'full' },\n  { path: '**', redirectTo: 'index', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SongListComponent,\n    SongDetailComponent,\n    SortDirective,\n    FilterDirective\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(route)\n  ],\n  providers: [\n        DataService,\n        PagerService,\n        SongListResolver,\n        { provide: HTTP_INTERCEPTORS, useClass: AddHeaderInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, EventEmitter, ElementRef, Renderer, HostListener, Input, Output } from '@angular/core';\r\n\r\n\r\nfunction setProperty(renderer: Renderer, elementRef: ElementRef, propName: string, propValue: any): void {\r\n  renderer.setElementProperty(elementRef, propName, propValue);\r\n}\r\n\r\n@Directive({\r\n  selector: '[appFilter]'\r\n})\r\nexport class FilterDirective {\r\n  @Input() public appFilter: any = {\r\n    filterString: '',\r\n    columnName: 'name'\r\n  };\r\n  @Output() public tableChanged: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input()\r\n  public get config(): any {\r\n    return this.appFilter;\r\n  }\r\n\r\n  public set config(value: any) {\r\n    this.appFilter = value;\r\n  }\r\n\r\n  private element: ElementRef;\r\n  private renderer: Renderer;\r\n\r\n  @HostListener('input', ['$event.target.value'])\r\n  public onChangeFilter(event: any): void {\r\n    this.appFilter.filterString = event;\r\n    this.tableChanged.emit({filtering: this.appFilter});\r\n  }\r\n\r\n  public constructor(element: ElementRef, renderer: Renderer) {\r\n    this.element = element;\r\n    this.renderer = renderer;\r\n    // Set default value for filter\r\n    setProperty(this.renderer, this.element, 'value', this.appFilter.filterString);\r\n  }\r\n\r\n}\r\n","import { Directive, EventEmitter, Input, Output, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appSort]'\r\n})\r\nexport class SortDirective {\r\n\r\n    @Input() public appSort: any;\r\n    @Input() public column: any;\r\n    @Output() public sortChanged: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input()\r\n    public get config(): any {\r\n        return this.appSort;\r\n    }\r\n\r\n    public set config(value: any) {\r\n        this.appSort = value;\r\n    }\r\n\r\n    @HostListener('click', ['$event', '$target'])\r\n    public onToggleSort(event: any): void {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.appSort && this.column && this.column.sort !== false) {\r\n            switch (this.column.sort) {\r\n            case 'asc':\r\n                this.column.sort = 'desc';\r\n                break;\r\n            case 'desc':\r\n                this.column.sort = '';\r\n                break;\r\n            default:\r\n                this.column.sort = 'asc';\r\n                break;\r\n            }\r\n\r\n            this.sortChanged.emit(this.column);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AddHeaderInterceptor implements HttpInterceptor{\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let modifiedRequest: HttpRequest<any> = req.clone({\r\n            setHeaders:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        return next.handle(modifiedRequest);\r\n    }\r\n\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpResponse, HttpEvent } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpCacheService } from './http-cache.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor{\r\n    constructor(private cache: HttpCacheService){}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        //pass along non-cacheable requests(Post, Put and delete) and invalidate cache\r\n        if(req.method !== 'GET'){\r\n            this.cache.invalidateCache();\r\n            return next.handle(req);\r\n        }\r\n\r\n        //attempt to retrive a cached response\r\n        const cachedResponse : HttpResponse<any> = this.cache.get(req.url);\r\n\r\n        //return cached response\r\n        if(cachedResponse){\r\n            return of(cachedResponse);\r\n        }\r\n\r\n        //send request to server and add response to cache\r\n        return next.handle(req)\r\n        .pipe(\r\n            tap(event => {\r\n                if(event instanceof HttpResponse){\r\n                    this.cache.put(req.url, event);\r\n                }\r\n            })\r\n        );\r\n        \r\n    }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Song, SongData } from \"./song\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DataService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public songs: Song[] = [];\r\n    loadSongs(): Observable<SongData> {\r\n        return this.http.get<SongData>(\"/api/song\")\r\n        .pipe(map((data: SongData) => {\r\n            this.songs=data.AllSongs;\r\n            return data;\r\n        }));\r\n    }\r\n    getSongDetails(symbol: string): Observable<Song[]> {\r\n        return this.http.get(`/api/song/${symbol}`)\r\n            .pipe(map((data: Song[]) => {\r\n                return data;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpCacheService {\r\n\r\n  private requests: any = { };\r\n  constructor() { }\r\n\r\n  //add the HttpResponse from server to the request object with the url as key parameter\r\n  put(url: string, response: HttpResponse<any>): void{\r\n      this.requests[url] = response;\r\n  }\r\n\r\n  //fetch the HttpResponse value from cache for the url if present, or returns undefined if not present\r\n  get(url:string): HttpResponse<any> | undefined{\r\n    return this.requests[url];\r\n  }\r\n\r\n  //remove the response value for the url in case the data is updated and fresh call needs to be made to server\r\n  invalidateRequestUrl(url:string): void {\r\n    this.requests[url] = undefined;\r\n  }\r\n\r\n  //empty the entire cache\r\n  invalidateCache():void{\r\n    this.requests = { };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PagerService {\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > totalPages) {\r\n            currentPage = totalPages;\r\n        }\r\n        let startPage: number, endPage: number;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<div><h2>Song Details : {{song?.name}} at Rank {{song?.rank}}</h2></div>\\r\\n<div class=\\\"control-section\\\">\\r\\n    <div id=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n    \\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Name:</div>\\r\\n                            <div class=\\\"col-md-6\\\">{{song?.name}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Artist:</div>\\r\\n                            <div class='col-md-6'>{{song?.artist}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Danceability:</div>\\r\\n                            <div class=\\\"col-md-6\\\">{{song?.danceability}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Energy:</div>\\r\\n                            <div class=\\\"col-md-6\\\">{{song?.energy}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Key:</div>\\r\\n                            <div class=\\\"col-md-6\\\">{{song?.key}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Loudness:</div>\\r\\n                            <div class=\\\"col-md-6\\\">{{song?.loudness}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Mode:</div>\\r\\n                            <div class=\\\"col-md-6\\\">{{song?.mode}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">Speechiness:</div>\\r\\n                            <div class=\\\"col-md-6\\\">{{song?.speechiness}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-3\\\">Acousticness:</div>\\r\\n                                <div class=\\\"col-md-6\\\">{{song?.acousticness}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">Instrumentalness:</div>\\r\\n                                    <div class=\\\"col-md-6\\\">{{song?.instrumentalness}}</div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-3\\\">Liveness:</div>\\r\\n                                        <div class=\\\"col-md-6\\\">{{song?.liveness}}</div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col-md-3\\\">Valence:</div>\\r\\n                                            <div class=\\\"col-md-6\\\">{{song?.valence}}</div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-md-3\\\">Tempo:</div>\\r\\n                                                <div class=\\\"col-md-6\\\">{{song?.tempo}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                    <div class=\\\"col-md-3\\\">Valence:</div>\\r\\n                                                    <div class=\\\"col-md-6\\\">{{song?.duration}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                        <div class=\\\"col-md-3\\\">Valence:</div>\\r\\n                                                        <div class=\\\"col-md-6\\\">{{song?.timeSignature}}</div>\\r\\n                                                    </div>\\r\\n\\r\\n                    </div>\\r\\n        \\r\\n                </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class='panel-footer'>\\r\\n    <button class='btn btn-success' (click)='onBack()' style='width:80px'>\\r\\n        <i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i> Back\\r\\n    </button>\\r\\n</div>\\r\\n    \\r\\n            \\r\\n    \"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { DataService } from \"../shared/data.service\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Song } from '../shared/song';\r\n\r\n@Component({\r\n    selector: \"song-detail\",\r\n    templateUrl: \"song-detail.component.html\"\r\n})\r\nexport class SongDetailComponent implements OnInit {\r\n    name: string;\r\n    song: Song;\r\n    constructor(private data: DataService, private _route: ActivatedRoute, private _router: Router) {\r\n    }\r\n    ngOnInit(): void {\r\n        this._route.params.subscribe(params => {\r\n            this.name = params['name'];\r\n        });\r\n        this.song= this.data.songs.find(x=>x.name==this.name);\r\n    }\r\n\r\n    \r\n    onBack(): void {\r\n        this._router.navigate(['/index']);\r\n    }\r\n\r\n   \r\n}","module.exports = \"ul {\\n    list-style-type: none;\\n}\\n\\nli {\\n    display: block;\\n    line-height: 30px;\\n}\\n\\n.description {\\n    font-size: 16px;\\n    padding-top: 10px;\\n}\\n\\n.pagination {\\n    display: inline-flex;\\n}\\n\"","module.exports = \"<div class='panel panel-primary'>\\r\\n    <div class='panel-heading'>\\r\\n            <div><h2>The top 50 songs on our chart are: </h2></div>\\r\\n    </div>\\r\\n    <div class='panel-body'>\\r\\n\\r\\n\\r\\n        <div class='table-responsive'>\\r\\n            <table class='table'>\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let column of columns\\\" [appSort]=\\\"config\\\" [column]=\\\"column\\\" (sortChanged)=\\\"onChangeTable($event)\\\">\\r\\n                        {{column.title | titlecase}}\\r\\n                        <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-down': column.sort === 'desc', 'fa-angle-up': column.sort === 'asc'}\\\"></i>\\r\\n                    </th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td *ngFor=\\\"let column of columns\\\">\\r\\n                                <input *ngIf=\\\"column.filtering\\\" placeholder=\\\"{{column.filtering.placeholder}}\\\"\\r\\n                                [appFilter]=\\\"column.filtering\\\"\\r\\n                                class=\\\"form-control\\\"\\r\\n                                style=\\\"width: auto;\\\"\\r\\n                                (tableChanged)=\\\"tableChanged(config)\\\"/>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                <tr *ngFor='let song of pagedItems'>\\r\\n                    <td>\\r\\n                        {{ song.rank }}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <a [routerLink]=\\\"['/detail', song?.name]\\\">{{ song?.name }}</a>\\r\\n                    </td>\\r\\n                    <td>{{ song?.artist }}</td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n\\r\\n    <!-- pager -->\\r\\n    <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(1)\\\">First</a>\\r\\n        </li>\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n        </li>\\r\\n        <li *ngFor=\\\"let page of pager.pages\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n        </li>\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n        </li>\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { DataService } from \"../shared/data.service\";\r\nimport { PagerService } from '../shared/pager.service';\r\nimport { SortDirective } from '../directives/sort.directive';\r\nimport { Song, SongData } from \"../shared/song\";\r\nimport { Route, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"song-list\",\r\n    templateUrl: \"song-list.component.html\",\r\n    styleUrls: [\"song-list.component.css\"]\r\n})\r\nexport class SongListComponent implements OnInit {\r\n    \r\n    constructor(private data: DataService, private _pagerService: PagerService, private route: ActivatedRoute) {\r\n    }\r\n\r\n    public stock: SongData;\r\n    public topSongs: Song[];\r\n    public allSongs: Song[];\r\n    // paged items\r\n    pagedItems: Song[];\r\n    public columns: Array<any> = [];\r\n    // pager object\r\n    pager: any = {};\r\n    public config: any;\r\n\r\n    ngOnInit(): void {\r\n        this.stock = this.route.snapshot.data.initData;\r\n        this.topSongs=this.stock.TopSongs;\r\n        this.allSongs=this.stock.AllSongs;\r\n        this.setPage(1);\r\n        this.initTable(); \r\n    } \r\n\r\n    setPage(page: number, data: Song[] = this.topSongs) {\r\n        // get pager object from service\r\n        this.pager = this._pagerService.getPager(data.length, page);\r\n\r\n        // get current page of items\r\n        this.pagedItems = data.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n    }\r\n\r\n    initTable() {\r\n        this.columns = [\r\n            { title: 'rank', sort: false},\r\n            { title: 'name', sort: '', filtering: { filterString: '', placeholder: 'Search by Name' }},\r\n            { title: 'artist', sort: '', filtering: { filterString: '', placeholder: 'Search by Artist' }},\r\n        ];\r\n        this.config = {\r\n            sorting: { columns: this.columns },\r\n            filtering: { filterString: '' }\r\n        };\r\n    }\r\n\r\n    public get configColumns(): any {\r\n        let sortColumns: Array<any> = [];\r\n\r\n        this.columns.forEach((column: any) => {\r\n            if (column.sort) {\r\n                sortColumns.push(column);\r\n            }\r\n        });\r\n\r\n        return { columns: sortColumns };\r\n    }\r\n\r\n    public changeFilter(data: any, config: any): any {\r\n        let filteredData: Array<any> = data;\r\n        this.columns.forEach((column: any) => {\r\n          if (column.filtering) {\r\n            filteredData = filteredData.filter((item: any) => {\r\n              return item[column.title].toString().match(column.filtering.filterString);\r\n            });\r\n          }\r\n        });\r\n    \r\n        if (!config.filtering) {\r\n          return filteredData;\r\n        }\r\n    \r\n        if (config.filtering.columnName) {\r\n          return filteredData.filter((item: any) =>\r\n            item[config.filtering.columnName].match(this.config.filtering.filterString));\r\n        }\r\n    \r\n        let tempArray: Array<any> = [];\r\n        filteredData.forEach((item: any) => {\r\n          let flag = false;\r\n          this.columns.forEach((column: any) => {\r\n            if (item[column.title].toString().match(this.config.filtering.filterString)) {\r\n              flag = true;\r\n            }\r\n          });\r\n          if (flag) {\r\n            tempArray.push(item);\r\n          }\r\n        });\r\n        filteredData = tempArray;\r\n    \r\n        return filteredData;\r\n      }\r\n\r\n    public changeSort(data: any, config: any): any {\r\n        if (!config.sorting) {\r\n            return data;\r\n        }\r\n\r\n        let columns = this.config.sorting.columns || [];\r\n        let columnName: string = void 0;\r\n        let sort: string = void 0;\r\n\r\n        for (let i = 0; i < columns.length; i++) {\r\n            if (columns[i].sort !== '' && columns[i].sort !== false) {\r\n                columnName = columns[i].title;\r\n                sort = columns[i].sort;\r\n            }\r\n        }\r\n\r\n        if (!columnName) {\r\n            return data;\r\n        }\r\n        if(columnName===\"rank\"){\r\n            return data.sort((previous: any, current: any) => {\r\n                if (previous[columnName] > current[columnName]) {\r\n                    return sort === 'desc' ? -1 : 1;\r\n                } else if (previous[columnName] < current[columnName]) {\r\n                    return sort === 'asc' ? -1 : 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        // simple sorting\r\n        return data.sort((previous: any, current: any) => {\r\n            if (previous[columnName].toString().toLowerCase() > current[columnName].toString().toLowerCase()) {\r\n                return sort === 'desc' ? -1 : 1;\r\n            } else if (previous[columnName].toString().toLowerCase() < current[columnName].toString().toLowerCase()) {\r\n                return sort === 'asc' ? -1 : 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    public onChangeTable(column: any): void {\r\n        this.columns.forEach((col: any) => {\r\n            if (col.title !== column.title) {\r\n                col.sort = '';\r\n            }\r\n        });\r\n        this.tableChanged({ sorting: this.configColumns });\r\n    }\r\n\r\n    public tableChanged(config: any) {\r\n        if (config.filtering) {\r\n          Object.assign(this.config.filtering, config.filtering);\r\n        }\r\n        if (config.sorting) {\r\n          Object.assign(this.config.sorting, config.sorting);\r\n        }\r\n        let filteredData = this.changeFilter(this.allSongs, this.config);\r\n        let sortedData;\r\n        if(JSON.stringify(filteredData)===JSON.stringify(this.allSongs)){\r\n            sortedData = this.changeSort(this.topSongs, this.config);\r\n        }\r\n        else {\r\n            sortedData = this.changeSort(filteredData, this.config);\r\n        }\r\n        this.setPage(1, sortedData);\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SongData } from '../shared/song';\r\nimport { DataService } from '../shared/data.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SongListResolver implements Resolve<SongData> {\r\n    constructor(private dataService: DataService){}\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<SongData> {\r\n        return this.dataService.loadSongs();\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}